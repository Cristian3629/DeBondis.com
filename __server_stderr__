==4697== Memcheck, a memory error detector
==4697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4697== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4697== Command: ./server 1234 paradas.txt bondis.txt
==4697== 
Cliente conectado.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Comando A recibido.
Cliente conectado.
Comando A recibido.
==4697== Thread 4:
==4697== Invalid read of size 1
==4697==    at 0x4081EF: AttendClient::run() (server_attend_client.cpp:76)
==4697==    by 0x40AAFA: std::_Bind_simple<std::_Mem_fn<void (Thread::*)()> (Thread*)>::operator()() (functional:1520)
==4697==    by 0x4EF592F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==4697==    by 0x53E06F9: start_thread (pthread_create.c:333)
==4697==    by 0x56FCB5C: clone (clone.S:109)
==4697==  Address 0x5ce0d80 is 32 bytes inside a block of size 88 free'd
==4697==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4697==    by 0x407202: void std::vector<AttendClient, std::allocator<AttendClient> >::_M_emplace_back_aux<AttendClient>(AttendClient&&) (vector.tcc:438)
==4697==    by 0x4064BB: WaitClient::run() (server_wait_client.cpp:28)
==4697==    by 0x40AAFA: std::_Bind_simple<std::_Mem_fn<void (Thread::*)()> (Thread*)>::operator()() (functional:1520)
==4697==    by 0x4EF592F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==4697==    by 0x53E06F9: start_thread (pthread_create.c:333)
==4697==    by 0x56FCB5C: clone (clone.S:109)
==4697==  Block was alloc'd at
==4697==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4697==    by 0x4071A9: void std::vector<AttendClient, std::allocator<AttendClient> >::_M_emplace_back_aux<AttendClient>(AttendClient&&) (vector.tcc:412)
==4697==    by 0x4064BB: WaitClient::run() (server_wait_client.cpp:28)
==4697==    by 0x40AAFA: std::_Bind_simple<std::_Mem_fn<void (Thread::*)()> (Thread*)>::operator()() (functional:1520)
==4697==    by 0x4EF592F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==4697==    by 0x53E06F9: start_thread (pthread_create.c:333)
==4697==    by 0x56FCB5C: clone (clone.S:109)
==4697== 
Cliente desconectado.
Comando L recibido.
Cliente desconectado.
==4697== 
==4697== HEAP SUMMARY:
==4697==     in use at exit: 72,704 bytes in 1 blocks
==4697==   total heap usage: 129 allocs, 128 frees, 108,849 bytes allocated
==4697== 
==4697== LEAK SUMMARY:
==4697==    definitely lost: 0 bytes in 0 blocks
==4697==    indirectly lost: 0 bytes in 0 blocks
==4697==      possibly lost: 0 bytes in 0 blocks
==4697==    still reachable: 72,704 bytes in 1 blocks
==4697==         suppressed: 0 bytes in 0 blocks
==4697== Rerun with --leak-check=full to see details of leaked memory
==4697== 
==4697== For counts of detected and suppressed errors, rerun with: -v
==4697== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
